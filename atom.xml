<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zigao Wang</title>
  
  
  <link href="https://zigao.cc/atom.xml" rel="self"/>
  
  <link href="https://zigao.cc/"/>
  <updated>2024-07-20T09:56:59.664Z</updated>
  <id>https://zigao.cc/</id>
  
  <author>
    <name>Zigao Wang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>AIGC 设计创意新未来</title>
    <link href="https://zigao.cc/2024/AIGC/"/>
    <id>https://zigao.cc/2024/AIGC/</id>
    <published>2024-07-20T08:20:10.000Z</published>
    <updated>2024-07-20T09:56:59.664Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在这个“万物皆可 AI”的时代，我认为它是值得我深入学习和研究的东西，它不仅能扩展我的知识面，还能成为提升效率的重要工具。老实说，ChatGPT 已经成为我日常工作中不可或缺的一部分，尤其是在撰写项目大纲或编程项目的初期阶段时。</p><p><img src="https://assets.zigao.wang/img/20240720164857.png" alt="AI 示意图 Creator: PhonlamaiPhoto | Credit: Getty Images/iStockphoto"></p><p>回顾从 GPT-3.5 到 GPT-4.0 和 GPT-4.0 的发展，AI 技术的进步是显而易见的。以前 GPT-3.5 还显得有些笨拙，难以解决许多复杂问题。但随着 GPT-4.0 的问世，它不仅能帮我修改代码中的 bug，还能生成高质量的长篇文本。而且，Gemini 和 Claude 的效果也非常出色。</p><p>在尝试了多种 AI 工具后，我也在本地部署了开源的 Meta Llama，并接入了 WebUI。起初，我对这种方法感到很满意，因为本地运算提供了出色的隐私保护，完全不依赖外部服务器或互联网。然而，即使到了 llama3:8b，它的中文理解能力仍然不尽如人意。虽然有改进版的 <a href="https://github.com/01-ai/Yi">Yi 模型</a>，但效果依旧差强人意。而且，这种方法非常耗电，我的 GPU 表示它受不了。因此，我最终还是回到了 ChatGPT。</p><p><img src="https://assets.zigao.wang/img/CleanShot%202024-07-20%20at%2016.44.23@2x.png" alt="本地部署的 Llama3:8b 在此胡言乱语"></p><p>除了文本生成，我还接触了 AI 生成音乐工具——Suno。说实话，直接描述它的效果可能无法让你们完全理解，所以我建议大家亲自去他们的官网 <a href="http://suno.com/">Suno.com</a> 体验一下，每天可以免费白嫖生成 10 首歌曲。为了让你们更直观地感受，我放了两首不同风格的歌曲，大家可以试听一下。</p><aside>💡 Suno Song Placeholder</aside><p>此外，像 DALL-E 3 和 Stable Diffusion 也都能生成相当不错的图像效果。（虽然我暂时还没有试过 Midjourney，因为有点麻烦，但主要是因为太贵了哈哈哈哈。但我相信它也有很不错的效果）</p><p>因此，最近，我在淘宝上买了一本名为《AIGC 设计创新未来》的书。我会把我认为重要的点和我自己的见解和教程写在下方：</p><blockquote><p><strong>注意</strong>: 我会根据我的进度在这里逐步更新，敬请期待！</p></blockquote><p><img src="https://assets.zigao.wang/img/20240720160919.png" alt="《AIGC 设计创新未来》书籍"></p><blockquote><p>🗓️ 2024&#x2F;7&#x2F;20 更新</p></blockquote><h1 id="AIGC-定义"><a href="#AIGC-定义" class="headerlink" title="AIGC 定义"></a>AIGC 定义</h1><p>AIGC (AI Generated Content) 是指利用人工智能技术生成的内容，包括 AI 绘画、AI 写作、AI 作曲等具体形式。AIGC 以这惊人的速度发展，帮助了世界上很多人。自 2022 年 ChatGPT 的出现和 AI 绘画作品的夺冠，拉开了 AIGC 的快速发展。</p><p><img src="https://www.nytimes.com/2022/09/02/technology/ai-artificial-intelligence-artists.html" alt="知名 AI 绘画作品《太空歌剧院》”Théâtre D’opéra Spatial” | 图片来源：https://www.nytimes.com/2022/09/02/technology/ai-artificial-intelligence-artists.html">](<a href="https://assets.zigao.wang/img/20240720174924.png">https://assets.zigao.wang/img/20240720174924.png</a>)</p><p><img src="https://assets.zigao.wang/img/20240720174351.png" alt="人工智能发展历程图 | 本图出自于《AIGC 设计创意未来》"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;在这个“万物皆可 AI”的时代，我认为它是值得我深入学习和研究的东西，它不仅能扩展我的知识面，还能成为提升效率的重要工具。老实说，ChatG</summary>
      
    
    
    
    <category term="Tech Insights" scheme="https://zigao.cc/categories/Tech-Insights/"/>
    
    <category term="Hardware &amp; Reviews" scheme="https://zigao.cc/categories/Tech-Insights/Hardware-Reviews/"/>
    
    
    <category term="AI" scheme="https://zigao.cc/tags/AI/"/>
    
    <category term="AIGC" scheme="https://zigao.cc/tags/AIGC/"/>
    
    <category term="ChatGPT" scheme="https://zigao.cc/tags/ChatGPT/"/>
    
  </entry>
  
  <entry>
    <title>Review of Trees and Binary Trees in C++</title>
    <link href="https://zigao.cc/2024/trees-and-binary-trees/"/>
    <id>https://zigao.cc/2024/trees-and-binary-trees/</id>
    <published>2024-07-08T11:45:32.000Z</published>
    <updated>2024-07-08T12:03:15.994Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome back to Zigao Wang’s Blog! Today, we’re going to review some essential concepts about trees and binary trees in C++. This post will help you understand the basic concepts, terminology, storage structures, and traversal methods of trees and binary trees.</p><h2 id="Basic-Concepts-of-Trees"><a href="#Basic-Concepts-of-Trees" class="headerlink" title="Basic Concepts of Trees"></a>Basic Concepts of Trees</h2><p>A tree is a non-linear data structure that represents hierarchical relationships. It consists of nodes, where each node can have zero or more child nodes. Nodes without parent nodes are called root nodes, and nodes without child nodes are called leaf nodes.</p><h2 id="Basic-Terminology-of-Trees"><a href="#Basic-Terminology-of-Trees" class="headerlink" title="Basic Terminology of Trees"></a>Basic Terminology of Trees</h2><ul><li><strong>Node</strong>: The basic unit of a tree, containing data elements and pointers to its child nodes.</li><li><strong>Degree of a Node</strong>: The number of child nodes a node has.</li><li><strong>Degree of a Tree</strong>: The maximum degree of any node in the tree.</li><li><strong>Leaf Node</strong>: A node with a degree of 0.</li><li><strong>Non-terminal Node</strong>: A node with a degree greater than 0.</li><li><strong>Child</strong>: A lower-level node directly connected to a node.</li><li><strong>Parent</strong>: The immediate higher-level node of a node.</li><li><strong>Sibling</strong>: Nodes that share the same parent.</li><li><strong>Ancestor</strong>: All nodes on the path from the root to a specific node.</li><li><strong>Descendant</strong>: Any node in the subtree rooted at a specific node.</li><li><strong>Level</strong>: The root node is at level 1, and the level of any other node is one more than the level of its parent.</li><li><strong>Height (or Depth) of a Tree</strong>: The maximum level of any node in the tree.</li><li><strong>Depth and Height of a Node</strong>: Depth is the number of edges from the root to the node, and height is the number of edges on the longest path from the node to a leaf.</li><li><strong>Cousin</strong>: Nodes whose parents are at the same level.</li><li><strong>Ordered Tree</strong>: A tree where the children of each node are ordered.</li><li><strong>Unordered Tree</strong>: A tree where the children of each node are not ordered.</li><li><strong>Full Tree</strong>: A tree in which all levels are completely filled.</li><li><strong>Forest</strong>: A collection of disjoint trees.</li></ul><p><img src="https://img.zigao.wang/240708-trees-and-binary-trees/binary-tree.jpg" alt="An diagram showing the different parts of trees"></p><h2 id="Sequential-Storage-of-Trees-One-Dimensional-Array-Parent-Representation"><a href="#Sequential-Storage-of-Trees-One-Dimensional-Array-Parent-Representation" class="headerlink" title="Sequential Storage of Trees: One-Dimensional Array Parent Representation"></a>Sequential Storage of Trees: One-Dimensional Array Parent Representation</h2><p>Using a one-dimensional array to store tree nodes and representing the relationships between nodes through array indices is a common approach. Usually, each node stores the index of its parent node.</p><h2 id="Linked-Storage-of-Trees"><a href="#Linked-Storage-of-Trees" class="headerlink" title="Linked Storage of Trees"></a>Linked Storage of Trees</h2><ul><li><strong>Child Storage Structure</strong>: Each node has multiple pointer fields, each pointing to one of its child nodes.</li><li><strong>Parent-Child Storage Structure</strong>: Each node has a pointer to its parent node and an array of pointers to its child nodes.</li><li><strong>Child-Sibling Storage Structure</strong>: Each node has two pointers: one to its first child and another to its right sibling.</li></ul><h2 id="Tree-Traversal"><a href="#Tree-Traversal" class="headerlink" title="Tree Traversal"></a>Tree Traversal</h2><ul><li><strong>Preorder Traversal</strong>: Visit the root node first, then traverse the left subtree, followed by the right subtree.</li><li><strong>Inorder Traversal</strong>: Traverse the left subtree first, then visit the root node, followed by the right subtree.</li><li><strong>Postorder Traversal</strong>: Traverse the left subtree first, then the right subtree, and finally visit the root node.</li><li><strong>Level-order Traversal</strong>: Visit nodes level by level from top to bottom and from left to right.</li><li><strong>Leaf Node Traversal</strong>: Only traverse the leaf nodes.</li></ul><h2 id="Concepts-and-Definitions-of-Binary-Trees"><a href="#Concepts-and-Definitions-of-Binary-Trees" class="headerlink" title="Concepts and Definitions of Binary Trees"></a>Concepts and Definitions of Binary Trees</h2><p>A binary tree is a special form of a tree in which each node has at most two child nodes, usually referred to as the left child and the right child.</p><h2 id="Basic-Forms-of-Binary-Trees"><a href="#Basic-Forms-of-Binary-Trees" class="headerlink" title="Basic Forms of Binary Trees"></a>Basic Forms of Binary Trees</h2><ul><li><strong>Empty Binary Tree</strong>: A binary tree with no nodes.</li><li><strong>Binary Tree with Only a Root Node</strong>.</li><li><strong>Binary Tree with a Root Node and either Left, Right, or Both Subtrees</strong>.</li></ul><h2 id="Classification-of-Binary-Trees"><a href="#Classification-of-Binary-Trees" class="headerlink" title="Classification of Binary Trees"></a>Classification of Binary Trees</h2><ul><li><strong>General Binary Tree</strong>: A binary tree with any structure.</li><li><strong>Full Binary Tree</strong>: A binary tree in which every node, except the leaves, has exactly two children.</li><li><strong>Complete Binary Tree</strong>: A binary tree in which all levels are fully filled except possibly for the last level, which is filled from left to right.</li></ul><h2 id="Properties-of-Binary-Trees"><a href="#Properties-of-Binary-Trees" class="headerlink" title="Properties of Binary Trees"></a>Properties of Binary Trees</h2><ol><li>A binary tree of depth (i) has at most (2^{i-1}) nodes on the (i)th level (i ≥ 1).</li><li>A binary tree of depth (k) has at most (2^k - 1) nodes (k ≥ 1).</li><li>In any binary tree, if (n_0) is the number of terminal nodes and (n_2) is the number of nodes with two children, then (n_0 &#x3D; n_2 + 1).</li></ol><h2 id="Storage-Structures-of-Binary-Trees"><a href="#Storage-Structures-of-Binary-Trees" class="headerlink" title="Storage Structures of Binary Trees"></a>Storage Structures of Binary Trees</h2><h3 id="Linked-Storage"><a href="#Linked-Storage" class="headerlink" title="Linked Storage"></a>Linked Storage</h3><p>Linked storage is the most common way to store binary trees, as it adapts well to the changing number of nodes in the tree. Each node contains three fields: data, a left pointer, and a right pointer. The left pointer points to the node’s left child, and the right pointer points to the node’s right child.</p><p>Here is an example of the linked storage structure in C++:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">TreeNode</span> &#123;</span><br><span class="line">    <span class="type">int</span> val;</span><br><span class="line">    TreeNode* left;</span><br><span class="line">    TreeNode* right;</span><br><span class="line">    <span class="built_in">TreeNode</span>(<span class="type">int</span> x) : <span class="built_in">val</span>(x), <span class="built_in">left</span>(<span class="literal">nullptr</span>), <span class="built_in">right</span>(<span class="literal">nullptr</span>) &#123;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>In this example, <code>TreeNode</code> is the structure definition for a binary tree node. It contains an integer data <code>val</code> and two pointers <code>left</code> and <code>right</code>, pointing to the left and right children, respectively.</p><h3 id="Sequential-Storage"><a href="#Sequential-Storage" class="headerlink" title="Sequential Storage"></a>Sequential Storage</h3><p>Sequential storage is typically used for complete binary trees or full binary trees because the nodes are arranged in a regular pattern in an array. For a complete binary tree, we can store it in a one-dimensional array in level order. For any element at index (i), its left child is at (2i + 1) and its right child is at (2i + 2) (assuming the array index starts at 0).</p><p>For general binary trees, sequential storage is inefficient and wastes a lot of space. Empty positions in the array are usually marked with special values (e.g., <code>nullptr</code> or other marker values).</p><p>Note: In practical applications, we prefer linked storage for general binary trees due to its flexibility and space efficiency. Sequential storage is a good choice for complete and full binary trees because of its high efficiency.</p><hr><p>I hope this review helps you understand trees and binary trees better. Stay tuned for more posts on data structures and algorithms. Until next time, happy coding!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome back to Zigao Wang’s Blog! Today, we’re going to review some essential concepts about trees and binary trees in C++. This post wi</summary>
      
    
    
    
    <category term="Programming" scheme="https://zigao.cc/categories/Programming/"/>
    
    
    <category term="C++" scheme="https://zigao.cc/tags/C/"/>
    
    <category term="Data Structures" scheme="https://zigao.cc/tags/Data-Structures/"/>
    
    <category term="Trees" scheme="https://zigao.cc/tags/Trees/"/>
    
    <category term="Binary Trees" scheme="https://zigao.cc/tags/Binary-Trees/"/>
    
  </entry>
  
  <entry>
    <title>The Birth of the Internet - The Story Behind the World Wide Web</title>
    <link href="https://zigao.cc/2024/internet-history/"/>
    <id>https://zigao.cc/2024/internet-history/</id>
    <published>2024-06-19T06:58:22.000Z</published>
    <updated>2024-06-23T03:38:21.579Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome back to Zigao Wang’s Blog! Today, we’re going to talk about how the Internet and the World Wide Web came to be. From the early days of networking to the creation of the first website, this is the story of how the Internet was invented and how it has changed our lives.</p><h2 id="The-Early-Days-ARPANET-and-Networking"><a href="#The-Early-Days-ARPANET-and-Networking" class="headerlink" title="The Early Days: ARPANET and Networking"></a>The Early Days: ARPANET and Networking</h2><p>The story of the Internet starts in the 1960s. During this time, the United States Department of Defense wanted a way to ensure communication could continue even if parts of the network were destroyed. This led to the development of ARPANET (Advanced Research Projects Agency Network).</p><h3 id="ARPANET-The-First-Network"><a href="#ARPANET-The-First-Network" class="headerlink" title="ARPANET: The First Network"></a>ARPANET: The First Network</h3><p>In 1969, ARPANET became the first successful attempt at creating a network that could connect different computers. The first message sent over ARPANET was supposed to be “LOGIN,” but the system crashed after the first two letters, so the first message ended up being just “LO.” Despite this rocky start, ARPANET quickly grew, connecting more universities and research centers.</p><p><img src="https://img.zigao.wang/240619-internet-history/arpanet-map.jpg" alt="A map of ARPANET, the precursor to the internet, showing the 111 computer terminals connected to the network in 1977."></p><img alt="The first message sent on the internet — On October 29th, 1969 Charlie Kline sent the internet’s first message “lo.” He had attempted to write the word “login,” but the system crashed before he could type the “g.”" src="https://img.zigao.wang/240619-internet-history/first-message.jpg" width="300"/><h3 id="Packet-Switching"><a href="#Packet-Switching" class="headerlink" title="Packet Switching"></a>Packet Switching</h3><p>One of the key ideas behind ARPANET was packet switching. This method breaks data into small packets that are sent independently over the network and then reassembled at their destination. This was more efficient and reliable than the older methods of sending data.</p><h2 id="The-1970s-and-1980s-Building-the-Foundation"><a href="#The-1970s-and-1980s-Building-the-Foundation" class="headerlink" title="The 1970s and 1980s: Building the Foundation"></a>The 1970s and 1980s: Building the Foundation</h2><p>The 1970s and 1980s saw a lot of progress in networking technologies. Many researchers and engineers were working on different projects that would eventually come together to form the modern Internet.</p><h3 id="TCP-IP-The-Internet’s-Language"><a href="#TCP-IP-The-Internet’s-Language" class="headerlink" title="TCP&#x2F;IP: The Internet’s Language"></a>TCP&#x2F;IP: The Internet’s Language</h3><p>In 1974, Vint Cerf and Bob Kahn introduced the Transmission Control Protocol (TCP) and the Internet Protocol (IP), or TCP&#x2F;IP. These protocols provided a standard way for different networks to communicate with each other. By 1983, ARPANET had adopted TCP&#x2F;IP, which helped create a more unified network.</p><p><img src="https://img.zigao.wang/240619-internet-history/vint-cerf-bob-kahn.jpg" alt="Vint Cerf and Bob Kahn"></p><h3 id="The-Expansion-of-ARPANET"><a href="#The-Expansion-of-ARPANET" class="headerlink" title="The Expansion of ARPANET"></a>The Expansion of ARPANET</h3><p>Throughout the 1970s, ARPANET continued to grow, connecting more institutions and developing new applications. By the early 1980s, it was clear that networking technology had a lot of potential.</p><h3 id="The-Birth-of-Email"><a href="#The-Birth-of-Email" class="headerlink" title="The Birth of Email"></a>The Birth of Email</h3><p>One of the most important developments during this time was the invention of email. In 1971, Ray Tomlinson sent the first email message. He used the “@” symbol to separate the user’s name from the computer’s name, a convention we still use today. Email quickly became one of the most popular uses of ARPANET.</p><img alt="Raymond Tomlinson" src="https://img.zigao.wang/240619-internet-history/raymond-tomlinson-email.jpg" width="350"/><h2 id="The-World-Wide-Web-Bringing-It-All-Together"><a href="#The-World-Wide-Web-Bringing-It-All-Together" class="headerlink" title="The World Wide Web: Bringing It All Together"></a>The World Wide Web: Bringing It All Together</h2><p>While the foundations of the Internet were being laid, the idea of the World Wide Web was still taking shape. This idea would become a reality thanks to the work of Tim Berners-Lee.</p><h3 id="Tim-Berners-Lee-Inventing-the-Web"><a href="#Tim-Berners-Lee-Inventing-the-Web" class="headerlink" title="Tim Berners-Lee: Inventing the Web"></a>Tim Berners-Lee: Inventing the Web</h3><p>Tim Berners-Lee, a British computer scientist working at CERN (the European Organization for Nuclear Research), saw the need for a better way to share information among researchers. In 1989, he proposed a system that used hypertext to link documents together, creating a “web” of information that could be accessed through a simple interface.</p><p><img src="https://img.zigao.wang/240619-internet-history/tim-berners-lee-web.jpg" alt="Tim Berners-Lee"></p><h3 id="Creating-the-Web-HTML-HTTP-and-URLs"><a href="#Creating-the-Web-HTML-HTTP-and-URLs" class="headerlink" title="Creating the Web: HTML, HTTP, and URLs"></a>Creating the Web: HTML, HTTP, and URLs</h3><p>To make his vision a reality, Berners-Lee developed three key technologies:</p><ol><li><strong>HTML (HyperText Markup Language)</strong>: A language for creating web pages.</li><li><strong>HTTP (HyperText Transfer Protocol)</strong>: A protocol for transferring web pages over the Internet.</li><li><strong>URL (Uniform Resource Locator)</strong>: Addresses for locating web pages.</li></ol><p>With these technologies, Berners-Lee created the first web browser and web server, allowing users to access and navigate the web.</p><h3 id="The-First-Website"><a href="#The-First-Website" class="headerlink" title="The First Website"></a>The First Website</h3><p>On August 6, 1991, Berners-Lee launched the world’s first website, hosted on his NeXT computer at CERN. The website, titled “World Wide Web,” provided information about the web project, including how to create web pages and set up web servers. The URL for this historic site was <a href="http://info.cern.ch/">http://info.cern.ch</a>.</p><p><img src="https://img.zigao.wang/240619-internet-history/www.jpg" alt="The First Website: World Wide Web in the 1990s"></p><p>The first website was simple, consisting of basic text and hyperlinks, but it represented a huge leap forward in information sharing.</p><h2 id="The-Web-Goes-Public"><a href="#The-Web-Goes-Public" class="headerlink" title="The Web Goes Public"></a>The Web Goes Public</h2><p>In 1993, the World Wide Web began to gain traction. CERN announced that the web would be free for anyone to use, allowing developers and researchers around the world to contribute to its growth.</p><h3 id="The-Rise-of-Web-Browsers"><a href="#The-Rise-of-Web-Browsers" class="headerlink" title="The Rise of Web Browsers"></a>The Rise of Web Browsers</h3><p>One of the key factors in the web’s rapid growth was the development of user-friendly web browsers. In 1993, Marc Andreessen and Eric Bina at the National Center for Supercomputing Applications (NCSA) released Mosaic, the first widely-used web browser. Mosaic’s graphical interface made it much easier for people to use the web.</p><p><img src="https://img.zigao.wang/240619-internet-history/mosaic-browser.jpg" alt="Mosaic Browser"></p><h3 id="The-Birth-of-the-Modern-Internet"><a href="#The-Birth-of-the-Modern-Internet" class="headerlink" title="The Birth of the Modern Internet"></a>The Birth of the Modern Internet</h3><p>With the development of web browsers and the adoption of common standards, the Internet began to grow rapidly. By the mid-1990s, it had become a global network, connecting millions of people and changing the way we communicate, work, and play.</p><h2 id="The-Impact-of-the-Internet"><a href="#The-Impact-of-the-Internet" class="headerlink" title="The Impact of the Internet"></a>The Impact of the Internet</h2><p>The invention of the Internet and the World Wide Web has had a profound impact on nearly every aspect of our lives. Here are just a few ways it has changed the world:</p><h3 id="Communication"><a href="#Communication" class="headerlink" title="Communication"></a>Communication</h3><p>The Internet has revolutionized communication. Email, instant messaging, and social media have made it possible to connect with people around the world instantly.</p><h3 id="Information-Access"><a href="#Information-Access" class="headerlink" title="Information Access"></a>Information Access</h3><p>The web has made it easier than ever to access information. With just a few clicks, you can find information on nearly any topic, from academic research to DIY projects.</p><h3 id="Commerce"><a href="#Commerce" class="headerlink" title="Commerce"></a>Commerce</h3><p>The Internet has transformed commerce, giving rise to e-commerce giants like Amazon and eBay. Online shopping has become a major part of the global economy.</p><h3 id="Entertainment"><a href="#Entertainment" class="headerlink" title="Entertainment"></a>Entertainment</h3><p>From streaming movies and music to playing online games, the Internet has changed the way we entertain ourselves.</p><h3 id="Education"><a href="#Education" class="headerlink" title="Education"></a>Education</h3><p>Online education has made learning more accessible. Platforms like Coursera, Khan Academy, and others provide high-quality educational resources to people around the world.</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>The story of the Internet and the World Wide Web is a testament to human ingenuity and collaboration. From the early days of ARPANET to the launch of the first website, countless individuals and institutions have contributed to the development of this revolutionary technology. As we continue to explore the possibilities of the Internet, it’s clear that it will remain a vital part of our lives for years to come.</p><p>The journey of the Internet is far from over, and its future holds countless possibilities for further innovation and discovery. Until next time, happy browsing!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome back to Zigao Wang’s Blog! Today, we’re going to talk about how the Internet and the World Wide Web came to be. From the early da</summary>
      
    
    
    
    <category term="Tech History" scheme="https://zigao.cc/categories/Tech-History/"/>
    
    
    <category term="Technology" scheme="https://zigao.cc/tags/Technology/"/>
    
    <category term="Internet" scheme="https://zigao.cc/tags/Internet/"/>
    
    <category term="World Wide Web" scheme="https://zigao.cc/tags/World-Wide-Web/"/>
    
    <category term="History" scheme="https://zigao.cc/tags/History/"/>
    
    <category term="Website" scheme="https://zigao.cc/tags/Website/"/>
    
  </entry>
  
  <entry>
    <title>Exploring CPU Architectures - Understanding ARM, x86, and More</title>
    <link href="https://zigao.cc/2024/cpu-architectures/"/>
    <id>https://zigao.cc/2024/cpu-architectures/</id>
    <published>2024-06-18T07:24:43.000Z</published>
    <updated>2024-06-23T03:38:39.896Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome back Zigao Wang’s Blog! Today, we’re diving into the fascinating world of CPU architectures. If you’ve ever wondered why your smartphone feels different from your desktop in terms of performance and power consumption, the answer often lies in the underlying CPU architecture. In this post, we’ll explore some of the most prevalent CPU architectures, including ARM, x86, and x64, and discuss what sets them apart.</p><h2 id="What-is-CPU-Architecture"><a href="#What-is-CPU-Architecture" class="headerlink" title="What is CPU Architecture?"></a>What is CPU Architecture?</h2><p>Before we delve into specific architectures, let’s briefly define what CPU architecture is. At its core, CPU architecture refers to the design and organization of a computer’s central processing unit (CPU). This encompasses the instruction set architecture (ISA), microarchitecture, and the implementation of these designs in silicon.</p><h3 id="Instruction-Set-Architecture-ISA"><a href="#Instruction-Set-Architecture-ISA" class="headerlink" title="Instruction Set Architecture (ISA)"></a>Instruction Set Architecture (ISA)</h3><p>ISA is the part of the CPU that defines the set of instructions the processor can execute. It serves as the interface between software and hardware. Different ISAs can lead to different performance characteristics and efficiencies. Two of the most well-known ISAs are ARM and x86.</p><h2 id="ARM-Architecture"><a href="#ARM-Architecture" class="headerlink" title="ARM Architecture"></a>ARM Architecture</h2><h3 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h3><p>ARM (Advanced RISC Machine) architecture is a family of RISC (Reduced Instruction Set Computing) architectures for computer processors. ARM processors are known for their power efficiency, making them ideal for mobile and embedded applications such as smartphones, tablets, and IoT devices.</p><h3 id="Key-Features"><a href="#Key-Features" class="headerlink" title="Key Features"></a>Key Features</h3><ol><li><strong>Power Efficiency</strong>: ARM processors are designed to perform efficiently with lower power consumption, which is crucial for battery-operated devices.</li><li><strong>Simplicity</strong>: ARM uses a simpler set of instructions compared to complex instruction set computing (CISC) architectures, which can lead to faster instruction execution.</li><li><strong>Scalability</strong>: ARM architecture is highly scalable, suitable for a wide range of applications from small microcontrollers to large servers.</li></ol><h3 id="Specific-Examples"><a href="#Specific-Examples" class="headerlink" title="Specific Examples"></a>Specific Examples</h3><ul><li><strong>Apple M Series Chips</strong>: Apple’s M1 and M2 chips are based on ARM architecture, offering impressive performance and power efficiency for Macs and iPads.</li></ul><p><img src="https://img.zigao.wang/240618-cpu-architecture/apple-cpu.jpg" alt="Apple M3, M3 Pro, M3 Max Chips uses ARM architecture"></p><ul><li><strong>Qualcomm Snapdragon</strong>: Widely used in Android smartphones, Snapdragon processors are based on ARM architecture.</li><li><strong>NVIDIA Jetson</strong>: Used in AI and robotics applications, NVIDIA’s Jetson modules leverage ARM processors for efficient performance.</li></ul><h2 id="x86-and-x64-Architecture"><a href="#x86-and-x64-Architecture" class="headerlink" title="x86 and x64 Architecture"></a>x86 and x64 Architecture</h2><h3 id="Overview-1"><a href="#Overview-1" class="headerlink" title="Overview"></a>Overview</h3><p>x86 architecture is a family of CISC (Complex Instruction Set Computing) architectures developed by Intel and AMD. Initially, x86 referred to 32-bit processors, but modern iterations have evolved to support 64-bit computing, known as x86-64 or simply x64. This extension allows for greater memory addressing and enhanced performance for certain applications.</p><h3 id="Key-Features-1"><a href="#Key-Features-1" class="headerlink" title="Key Features"></a>Key Features</h3><ol><li><strong>Performance</strong>: x86 and x64 processors are known for their high performance, making them suitable for demanding applications like gaming, video editing, and large-scale computations.</li><li><strong>Backward Compatibility</strong>: x86 and x64 architectures maintain backward compatibility with older software, ensuring that applications developed years ago can still run on modern processors.</li><li><strong>Versatility</strong>: x86 and x64 are versatile and can be found in a wide range of devices, from desktops and laptops to servers and high-performance workstations.</li></ol><h3 id="Specific-Examples-1"><a href="#Specific-Examples-1" class="headerlink" title="Specific Examples"></a>Specific Examples</h3><ul><li><strong>Intel Core Series</strong>: Widely used in desktops and laptops, Intel’s Core i3, i5, i7, and i9 processors are based on x64 architecture.</li><li><strong>AMD Ryzen</strong>: Known for high performance and competitive pricing, AMD’s Ryzen processors are also based on x64 architecture.</li></ul><p><img src="https://img.zigao.wang/240618-cpu-architecture/intel-amd-cpu.jpg" alt="Intel Core i7 &amp; AMD Ryzen CPU"></p><ul><li><strong>Intel Xeon</strong>: Used in servers and workstations, Intel Xeon processors offer powerful performance for enterprise applications.</li></ul><h2 id="Other-Architectures"><a href="#Other-Architectures" class="headerlink" title="Other Architectures"></a>Other Architectures</h2><p>While ARM, x86, and x64 are the most well-known, there are other architectures worth mentioning:</p><h3 id="MIPS-Microprocessor-without-Interlocked-Pipeline-Stages"><a href="#MIPS-Microprocessor-without-Interlocked-Pipeline-Stages" class="headerlink" title="MIPS (Microprocessor without Interlocked Pipeline Stages)"></a>MIPS (Microprocessor without Interlocked Pipeline Stages)</h3><p>MIPS architecture is another type of RISC architecture. It is often used in academic settings and some embedded systems. MIPS processors are known for their simplicity and efficiency.</p><img alt="The Ingenic JZ4725 is an example for a MIPS-based SoC. (By © Raimond Spekking)" src="https://img.zigao.wang/240618-cpu-architecture/mips-cpu.jpg" width="250"/><h3 id="PowerPC"><a href="#PowerPC" class="headerlink" title="PowerPC"></a>PowerPC</h3><p>Developed by IBM, PowerPC is a RISC architecture that was once popular in Apple computers and some gaming consoles. It is still used in some embedded applications and high-performance computing.</p><img alt="IBM PowerPC 601 Microprocessor" src="https://img.zigao.wang/240618-cpu-architecture/powerpc-cpu.jpg" width="250"/><h3 id="RISC-V"><a href="#RISC-V" class="headerlink" title="RISC-V"></a>RISC-V</h3><p>RISC-V is an open-source ISA based on RISC principles. It has gained popularity in recent years due to its flexibility and the ability for developers to customize it for specific applications.</p><p><img src="https://img.zigao.wang/240618-cpu-architecture/riscv-cpu.jpg" alt="RISC-V processor prototype, January 2013 (By © Derrick Coetzee)"></p><h3 id="LoongArch"><a href="#LoongArch" class="headerlink" title="LoongArch"></a>LoongArch</h3><p>Loong architecture, developed by China’s Loongson Technology, is another notable player in the CPU landscape. Loongson processors are based on the MIPS architecture but have been significantly enhanced and optimized for various applications. These processors are primarily used in China for desktops, servers, and embedded systems, providing a homegrown alternative to ARM and x86. With a focus on both performance and energy efficiency, Loongson aims to reduce dependency on foreign technology and promote domestic innovation in the semiconductor industry.</p><img alt="Loongson 3A6000 powered by LoongArch" src="https://img.zigao.wang/240618-cpu-architecture/loong-cpu.jpg" width="250"/><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Understanding CPU architectures is crucial for making informed decisions about the devices and systems you use. ARM, x86, and x64 architectures each have their strengths and are optimized for different types of tasks. While ARM excels in power efficiency and is prevalent in mobile and embedded systems, x86 and x64 offer high performance and versatility, making them the go-to choice for personal computers and servers.</p><p>As technology continues to evolve, we may see new architectures emerge and existing ones adapt to meet the changing demands of the digital world. Stay tuned to our blog for more insights into the ever-evolving landscape of technology!</p><p>Feel free to share your thoughts and questions in the comments below. Until next time, happy computing!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome back Zigao Wang’s Blog! Today, we’re diving into the fascinating world of CPU architectures. If you’ve ever wondered why your sma</summary>
      
    
    
    
    <category term="Tech Insights" scheme="https://zigao.cc/categories/Tech-Insights/"/>
    
    <category term="Hardware &amp; Reviews" scheme="https://zigao.cc/categories/Tech-Insights/Hardware-Reviews/"/>
    
    
    <category term="Technology" scheme="https://zigao.cc/tags/Technology/"/>
    
    <category term="CPU" scheme="https://zigao.cc/tags/CPU/"/>
    
    <category term="Architecture" scheme="https://zigao.cc/tags/Architecture/"/>
    
    <category term="ARM" scheme="https://zigao.cc/tags/ARM/"/>
    
    <category term="x86" scheme="https://zigao.cc/tags/x86/"/>
    
    <category term="x64" scheme="https://zigao.cc/tags/x64/"/>
    
  </entry>
  
  <entry>
    <title>Y6 English Science Review</title>
    <link href="https://zigao.cc/2024/y6-eng-sci-review/"/>
    <id>https://zigao.cc/2024/y6-eng-sci-review/</id>
    <published>2024-06-17T10:26:32.000Z</published>
    <updated>2024-06-17T11:27:35.843Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Cells"><a href="#Cells" class="headerlink" title="Cells"></a>Cells</h1><h2 id="Microscopes-Biology-pages-48-49"><a href="#Microscopes-Biology-pages-48-49" class="headerlink" title="Microscopes (Biology, pages 48-49)"></a>Microscopes (Biology, pages 48-49)</h2><p><strong>Eyepiece Lens</strong>: You look through this lens at the top of the microscope.</p><p><strong>Objective Lens</strong>: The lens used to focus on the object placed on the stage.</p><p><strong>Stage</strong>: The platform where you place the object or specimen.</p><p><strong>Clips</strong>: These hold the object or specimen in place on the stage.</p><p><strong>Coarse Focus</strong>: Adjusts the focal distance to bring the object into general focus.</p><p><strong>Fine Focus</strong>: Adjusts the focus more precisely for a sharper image.</p><p><strong>Light Source&#x2F;Mirror</strong>: Provides light to illuminate the object being observed.</p><h2 id="Living-Things-Biology-pages-20-40"><a href="#Living-Things-Biology-pages-20-40" class="headerlink" title="Living Things (Biology, pages 20-40)"></a>Living Things (Biology, pages 20-40)</h2><h3 id="Seven-characteristics-of-living-organism"><a href="#Seven-characteristics-of-living-organism" class="headerlink" title="Seven characteristics of living organism"></a>Seven characteristics of living organism</h3><ul><li>Movement</li><li>Reproduction</li><li>Sensitivity</li><li>Growth</li><li>Respiration</li><li>Excretion</li><li>Nutrition</li></ul><h3 id="Cell-Theory"><a href="#Cell-Theory" class="headerlink" title="Cell Theory"></a>Cell Theory</h3><ol><li>Cells are the basic unit of life</li><li>All organisms consist of one or more cells</li><li>All cells come from other cells</li></ol><h2 id="Cells-Organelles-and-Structures-Biology-pages-50-54"><a href="#Cells-Organelles-and-Structures-Biology-pages-50-54" class="headerlink" title="Cells Organelles and Structures (Biology, pages 50-54)"></a>Cells Organelles and Structures (Biology, pages 50-54)</h2><h3 id="Cell-Organelles"><a href="#Cell-Organelles" class="headerlink" title="Cell Organelles"></a>Cell Organelles</h3><ul><li><strong>Nucleus</strong>: Stores genetic information.</li><li><strong>Cytoplasm</strong>: The interior contents of the cell.</li><li><strong>Mitochondria</strong>: Produces energy for the cell.</li><li><strong>Cell Membrane</strong>: Separates the cell from the environment.</li><li><strong>Cell Wall</strong>: Rigid barrier that protects and provides structure to plant cells.</li><li><strong>Chloroplast</strong>: Produces food through photosynthesis in plant cells.</li><li><strong>Vacuole</strong>: Stores water and nutrients in plant cells.</li></ul><p><a href="https://www.bbc.co.uk/bitesize/guides/z77kkmn/revision/1">https://www.bbc.co.uk/bitesize/guides/z77kkmn/revision/1</a></p><h3 id="Plant-Cells-vs-Animal-Cells"><a href="#Plant-Cells-vs-Animal-Cells" class="headerlink" title="Plant Cells vs. Animal Cells"></a>Plant Cells vs. Animal Cells</h3><p>Plant cells have a rigid cell wall, chloroplasts for photosynthesis, and large central vacuoles for storage, which are not found in animal cells.</p><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled.png" alt="Plant cells and animals cells organelles"></p><hr><h1 id="Energy"><a href="#Energy" class="headerlink" title="Energy"></a>Energy</h1><h2 id="Renewable-and-Non-renewable-Resources-Physics-pages-166-176"><a href="#Renewable-and-Non-renewable-Resources-Physics-pages-166-176" class="headerlink" title="Renewable and Non-renewable Resources (Physics, pages 166-176)"></a>Renewable and Non-renewable Resources (Physics, pages 166-176)</h2><h3 id="Renewable-Resources"><a href="#Renewable-Resources" class="headerlink" title="Renewable Resources"></a>Renewable Resources</h3><p>Renewable resources will naturally replenish themselves over time, like wind, solar, plants, trees, etc.</p><p><img src="https://images.unsplash.com/photo-1532601224476-15c79f2f7a51?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb" alt="Wind energy turbines"></p><h3 id="Non-renewable-Resources"><a href="#Non-renewable-Resources" class="headerlink" title="Non-renewable Resources"></a>Non-renewable Resources</h3><p>Non-renewable will be gone forever once used, like coal, fuel, etc.</p><p><img src="https://images.unsplash.com/photo-1589007716619-42656585dd85?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb" alt="Burning coal"></p><h2 id="Energy-Conversion-Physics-pages-20-32"><a href="#Energy-Conversion-Physics-pages-20-32" class="headerlink" title="Energy Conversion (Physics, pages 20-32)"></a>Energy Conversion (Physics, pages 20-32)</h2><p>Energy conversion, also termed as energy transformation, is the process of changing one form of energy into another. Energy conversion occurs everywhere and every minute of the day.</p><p>For example, we put electrical energy into a bulb and the bulb produces light (which is the desired form of output from a bulb), but we also get heat from the bulb (undesired form of energy from an electric bulb).</p><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%201.png" alt="Electrical energy to light and heat"></p><aside>💡 The amount of electrical energy put into a bulb = the amount of light energy (desirable form) plus the heat energy that comes out of the bulb (undesirable form).</aside><p>When all forms of energy coming out of an energy conversion device are added up, it will be equal to the energy that is put into a device. Energy output must be equal to the input. This means that energy can not be destroyed or created. It can only change its form. Therefore, energy flow into and out of any energy conversion device can be summarized in the diagram below:</p><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%202.png" alt="Energy conversion diagram"></p><p><a href="https://www.e-education.psu.edu/egee102/node/1937">https://www.e-education.psu.edu/egee102/node/1937</a></p><h3 id="Law-of-Conservation-of-Energy"><a href="#Law-of-Conservation-of-Energy" class="headerlink" title="Law of Conservation of Energy"></a>Law of Conservation of Energy</h3><p>The law of conservation of energy states that energy can neither be created nor destroyed - only converted from one form of energy to another. This means that a system always has the same amount of energy, unless it’s added from the outside.</p><p><a href="https://energyeducation.ca/encyclopedia/Law_of_conservation_of_energy">https://energyeducation.ca/encyclopedia/Law_of_conservation_of_energy</a></p><h2 id="Type-of-Energy-Physics-pages-20-32"><a href="#Type-of-Energy-Physics-pages-20-32" class="headerlink" title="Type of Energy (Physics, pages 20-32)"></a>Type of Energy (Physics, pages 20-32)</h2><p>In physics, we define energy as the ability of something to do work. Energy can exist in many forms. All forms of energy are either kinetic or potential.</p><h3 id="Forms-of-Energy"><a href="#Forms-of-Energy" class="headerlink" title="Forms of Energy"></a>Forms of Energy</h3><ul><li><p>Electrical Energy</p></li><li><p>Thermal Energy</p></li><li><p>Light Energy</p></li><li><p>Wave Energy</p></li><li><p>Heat Energy</p></li><li><p>Hydroelectric Energy</p></li><li><p>Solar Energy</p></li><li><p>Wind Energy</p></li><li><p>Nuclear Energy</p></li><li><p>Tidal Energy</p></li><li><p>Biomass Energy</p></li><li><p>Kinetic Energy</p></li><li><p>Geothermal Energy</p></li></ul><h3 id="Kinetic-Energy"><a href="#Kinetic-Energy" class="headerlink" title="Kinetic Energy"></a>Kinetic Energy</h3><ul><li>Mechanical Energy</li><li>Electrical Energy</li><li>Thermal Energy</li><li>Sound Energy</li><li>Radiant Energy</li></ul><h3 id="Potential-Energy"><a href="#Potential-Energy" class="headerlink" title="Potential Energy"></a>Potential Energy</h3><ul><li>Chemical Energy</li><li>Electric Energy</li><li>Elastic Energy</li><li>Gravitational Energy</li></ul><p><a href="https://byjus.com/physics/energy/">https://byjus.com/physics/energy/</a></p><hr><h1 id="Particle-Theory"><a href="#Particle-Theory" class="headerlink" title="Particle Theory"></a>Particle Theory</h1><h2 id="Particle-Model-Chemistry-pages-20-27"><a href="#Particle-Model-Chemistry-pages-20-27" class="headerlink" title="Particle Model (Chemistry, pages 20-27)"></a>Particle Model (Chemistry, pages 20-27)</h2><h3 id="Four-Principles-of-the-Particle-Model"><a href="#Four-Principles-of-the-Particle-Model" class="headerlink" title="Four Principles of the Particle Model"></a>Four Principles of the Particle Model</h3><ol><li>All matter is made up of tiny particles known as atoms.</li><li>Atoms of the same element are essentially identical and atoms of different elements are different.</li><li>Particles of matter are constantly in motion. The more energy they have, the faster they move.</li><li>There are attractive forces between particles. These forces are stronger when the particles are closer together.</li></ol><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%203.png" alt="Particle model: solid, liquid, gas"></p><h3 id="Diffusion"><a href="#Diffusion" class="headerlink" title="Diffusion"></a>Diffusion</h3><ul><li>Diffusion is the movement of a substance from an area of high concentration to an area of lower concentration.</li><li>Diffusion occurs in liquids and gases when their particles collide randomly and spread out.</li><li>Diffusion is an important process for living things - it is how substances move in and out of cells.</li></ul><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%204.png" alt="Diffusion particle model"></p><p><a href="https://www.bbc.co.uk/bitesize/articles/znqbcj6">https://www.bbc.co.uk/bitesize/articles/znqbcj6</a></p><h3 id="Factors-that-Impact-Gas-Behavior"><a href="#Factors-that-Impact-Gas-Behavior" class="headerlink" title="Factors that Impact Gas Behavior"></a>Factors that Impact Gas Behavior</h3><ul><li>Temperature (T)</li><li>Volume (V)</li><li>Pressure (P)</li><li>Quantity (n)</li><li>As the temperature increases, the volume of the gas also increases due to the expansion of gas molecules.</li><li>As the temperature decreases, the volume of the gas also decreases due to the contraction of gas molecules.</li><li>As the temperature increases, the pressure of the gas also increases due to the expansion of gas molecules.</li><li>As the temperature decreases, the pressure of the gas also decreases due to the contraction of gas molecules.</li><li>For converting gas either into solid or liquid, the temperature of the gas must be very low or the pressure of the gas must be very high.</li><li>As the quantity decreases, the pressure will also decrease and with an increase in the quantity, the pressure also increases.</li><li>For pressure to decrease, the volume and quantity of the gas should be less.</li><li>For pressure to increase, the volume and quantity of the gas should be more.</li></ul><p><a href="https://byjus.com/physics/behaviour-of-gas-molecules/#What-are-the-factors-that-affect-the-Behaviour-of-Gases">https://byjus.com/physics/behaviour-of-gas-molecules/#What-are-the-factors-that-affect-the-Behaviour-of-Gases</a></p><h2 id="States-of-Matter-Chemistry-pages-20-27"><a href="#States-of-Matter-Chemistry-pages-20-27" class="headerlink" title="States of Matter (Chemistry, pages 20-27)"></a>States of Matter (Chemistry, pages 20-27)</h2><table><thead><tr><th>State</th><th>Solid</th><th>Liquid</th><th>Gas</th></tr></thead><tbody><tr><td>Closeness of particles</td><td>Very close</td><td>Close</td><td>Far apart</td></tr><tr><td>Arrangement of particles</td><td>Regular pattern</td><td>Randomly arranged</td><td>Randomly arranged</td></tr><tr><td>Movement of particles</td><td>Vibrate around a fixed position</td><td>Move around each other</td><td>Move quickly in all directions</td></tr><tr><td>Energy of particles</td><td>Low energy</td><td>Greater energy</td><td>Highest energy</td></tr></tbody></table><h3 id="Solid"><a href="#Solid" class="headerlink" title="Solid"></a><strong>Solid</strong></h3><ul><li>have a fixed shape and cannot flow, because their particles cannot move from place to place</li><li>cannot be compressed (squashed), because their particles are close together and have no space to move into</li></ul><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%205.png" alt="Solid particle diagram"></p><h3 id="Liquid"><a href="#Liquid" class="headerlink" title="Liquid"></a><strong>Liquid</strong></h3><ul><li>flow and take the shape of their container, because their particles can move around each other</li><li>cannot be compressed, because their particles are close together and have no space to move into</li></ul><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%206.png" alt="Liquid particle diagram"></p><h3 id="Gas"><a href="#Gas" class="headerlink" title="Gas"></a><strong>Gas</strong></h3><ul><li>flow and completely fill their container, because their particles can move quickly in all directions</li><li>can be compressed, because their particles are far apart and have space to move into</li></ul><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%207.png" alt="Gas particle diagram"></p><p><a href="https://www.bbc.co.uk/bitesize/guides/z93jfcw/revision/1">https://www.bbc.co.uk/bitesize/guides/z93jfcw/revision/1</a></p><h2 id="Pressure-Volume-and-Temperature-Relationships-Physics-pages-124-127"><a href="#Pressure-Volume-and-Temperature-Relationships-Physics-pages-124-127" class="headerlink" title="Pressure, Volume and Temperature Relationships (Physics, pages 124-127)"></a>Pressure, Volume and Temperature Relationships (Physics, pages 124-127)</h2><p>The volume of a gas is inversely proportional to its pressure and directly proportional to its temperature and the amount of gas.</p><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Screenshot_2024-06-17_at_17.15.12.png" alt="Pressure-Volume &amp; Volume-Temperature relationship graphs"></p><h2 id="Density-Chemistry-pages-188-189"><a href="#Density-Chemistry-pages-188-189" class="headerlink" title="Density (Chemistry, pages 188-189)"></a>Density (Chemistry, pages 188-189)</h2><p>Density is a measurement that compares the amount of matter an object has to its volume.</p><p>$$<br>Density &#x3D; \frac{Mass}{Volume}<br>$$</p><p><strong>Predicting an object’s density:</strong> Objects that are more dense (heavier for their size) than water will sink, and objects that are less dense than water will float.</p><hr><h1 id="Senses"><a href="#Senses" class="headerlink" title="Senses"></a>Senses</h1><h2 id="Human-Eye-and-Optics-Physics-pages-150-151"><a href="#Human-Eye-and-Optics-Physics-pages-150-151" class="headerlink" title="Human Eye and Optics (Physics, pages 150-151)"></a>Human Eye and Optics (Physics, pages 150-151)</h2><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%208.png" alt="Human eye label diagram"></p><h3 id="Iris"><a href="#Iris" class="headerlink" title="Iris"></a>Iris</h3><p>The colored part of the eye, a muscle that controls the size of the pupil</p><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%209.png" alt="Iris"></p><h3 id="Pupil"><a href="#Pupil" class="headerlink" title="Pupil"></a>Pupil</h3><p>The hole where the light goes in</p><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%2010.png" alt="Pupil"></p><h3 id="Cornea"><a href="#Cornea" class="headerlink" title="Cornea"></a>Cornea</h3><p>Transparent outer layer of the eye</p><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%2011.png" alt="Cornea"></p><h3 id="Lens"><a href="#Lens" class="headerlink" title="Lens"></a>Lens</h3><p>Focuses the light onto the retina, together with the cornea</p><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Screenshot_2024-06-17_at_17.41.16.png" alt="Lens"></p><h3 id="Retina"><a href="#Retina" class="headerlink" title="Retina"></a>Retina</h3><p>Where the image forms, contains light-sensitive cells that produce a signal</p><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%2012.png" alt="Retina"></p><h3 id="Optic-Nerve"><a href="#Optic-Nerve" class="headerlink" title="Optic Nerve"></a>Optic Nerve</h3><p>Transfers the signal from the retina to the brain</p><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%2013.png" alt="Optic Nerve"></p><h2 id="Concave-Convex-Mirrors"><a href="#Concave-Convex-Mirrors" class="headerlink" title="Concave &amp; Convex Mirrors"></a>Concave &amp; Convex Mirrors</h2><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Screenshot_2024-06-17_at_17.52.02.png" alt="Concave &amp; Convex Mirrors"></p><h3 id="Concave-Mirror-Image-Formation-Summary"><a href="#Concave-Mirror-Image-Formation-Summary" class="headerlink" title="Concave Mirror Image Formation Summary"></a><strong>Concave Mirror Image Formation Summary</strong></h3><table><thead><tr><th>S. No</th><th>Position of Object</th><th>Position of Image</th><th>Size of Image</th><th>Nature of Image</th></tr></thead><tbody><tr><td>1</td><td>Object at Infinity</td><td>At the Focus</td><td>Highly Diminished</td><td>Real and Inverted</td></tr><tr><td>2</td><td>Object Beyond the Centre of Curvature</td><td>Between the Centre of Curvature and Focus</td><td>Diminished</td><td>Real and Inverted</td></tr><tr><td>3</td><td>Object at the Centre of Curvature or Focus</td><td>At the Centre of Curvature</td><td>Same Size</td><td>Real and Inverted</td></tr><tr><td>4</td><td>Object Between the Centre of Curvature and Focus</td><td>Behind the Centre of Curvature</td><td>Enlarged</td><td>Real and Inverted</td></tr><tr><td>5</td><td>Object at the Focus</td><td>At Infinity</td><td>Highly Enlarged</td><td>Real and Inverted</td></tr><tr><td>6</td><td>Object Between the Focus and the Pole</td><td>Behind the Mirror</td><td>Enlarged</td><td>Virtual and Erect</td></tr></tbody></table><h3 id="Convex-Mirror-Image-Formation-Summary"><a href="#Convex-Mirror-Image-Formation-Summary" class="headerlink" title="Convex Mirror Image Formation Summary"></a><strong>Convex Mirror Image Formation Summary</strong></h3><table><thead><tr><th>S. No</th><th>Position Of Object</th><th>Position of Image</th><th>Size of Image</th><th>Nature of Image</th></tr></thead><tbody><tr><td>1</td><td>At Infinity</td><td>At the focus F, behind the mirror</td><td>Highly diminished</td><td>Virtual and Erect</td></tr><tr><td>2</td><td>Between Infinity and the Pole</td><td>Between P and F, behind the mirror</td><td>Diminished</td><td>Virtual and Erect</td></tr></tbody></table><p><a href="https://byjus.com/physics/concave-convex-mirrors/">https://byjus.com/physics/concave-convex-mirrors/</a></p><h2 id="Concave-Convex-Lenses"><a href="#Concave-Convex-Lenses" class="headerlink" title="Concave &amp; Convex Lenses"></a><strong>Concave &amp; Convex Lenses</strong></h2><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Screenshot_2024-06-17_at_17.47.54.png" alt="Concave &amp; Convex Lenses"></p><h3 id="Image-Formation-by-Concave-Lens"><a href="#Image-Formation-by-Concave-Lens" class="headerlink" title="Image Formation by Concave Lens"></a>Image Formation by Concave Lens</h3><table><thead><tr><th>Object Location</th><th>Image Location</th><th>Image Nature</th><th>Image Size</th></tr></thead><tbody><tr><td>Infinity</td><td>At F1</td><td>Virtual and Erect</td><td>Highly diminished, point-sized</td></tr><tr><td>Beyond Infinity and Optical Centre</td><td>Between Focus (F1) and Optical center (O)</td><td>Virtual and Erect</td><td>Diminished</td></tr></tbody></table><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%2014.png" alt="Concave Lens 1"></p><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%2015.png" alt="Concave Lens 2"></p><h3 id="Image-Formation-by-Convex-Lens"><a href="#Image-Formation-by-Convex-Lens" class="headerlink" title="Image Formation by Convex Lens"></a>Image Formation by Convex Lens</h3><table><thead><tr><th>Object location</th><th>Image location</th><th>Image nature</th><th>Image size</th></tr></thead><tbody><tr><td>Infinity</td><td>At F2</td><td>Real and Inverted</td><td>Diminished, point sized</td></tr><tr><td>Beyond 2F1</td><td>Between 2F2 and F2</td><td>Real and Inverted</td><td>Diminished</td></tr><tr><td>Between 2F1 and F1</td><td>Beyond 2F2</td><td>Real and Inverted</td><td>Enlarged</td></tr><tr><td>At F1</td><td>At infinity</td><td>Real and Inverted</td><td>Infinitely large or highly enlarged</td></tr><tr><td>At 2F1</td><td>At 2F2</td><td>Real and Inverted</td><td>Same size</td></tr><tr><td>Between F1 and 0</td><td>On the same side as the object</td><td>Virtual and Erect</td><td>Enlarged</td></tr></tbody></table><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%2016.png" alt="Convex Lens 1"></p><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%2017.png" alt="Convex Lens 2"></p><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%2018.png" alt="Convex Lens 3"></p><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%2019.png" alt="Convex Lens 4"></p><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%2020.png" alt="Convex Lens 5"></p><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%2021.png" alt="Convex Lens 6"></p><p><a href="https://byjus.com/physics/concave-convex-lenses/">https://byjus.com/physics/concave-convex-lenses/</a></p><h2 id="Optical-Instruments"><a href="#Optical-Instruments" class="headerlink" title="Optical Instruments"></a>Optical Instruments</h2><h3 id="Microscope"><a href="#Microscope" class="headerlink" title="Microscope"></a>Microscope</h3><p>A microscope is <strong>an instrument that can be used to observe small objects, even cells</strong>. The image of an object is magnified through at least one lens in the microscope. This lens bends light toward the eye and makes an object appear larger than it actually is.</p><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%2022.png" alt="Microscope label diagram"></p><h3 id="Telescope"><a href="#Telescope" class="headerlink" title="Telescope"></a>Telescope</h3><p>Telescopes are <strong>meant for viewing distant objects, producing an image that is larger than the image that can be seen with the unaided eye</strong>. Telescopes gather far more light than the eye, allowing dim objects to be observed with greater magnification and better resolution.</p><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%2023.png" alt="Telescope label diagram"></p><h2 id="Human-Ear-and-Hearing-Physics-pages-52-53"><a href="#Human-Ear-and-Hearing-Physics-pages-52-53" class="headerlink" title="Human Ear and Hearing (Physics, pages 52-53)"></a>Human Ear and Hearing (Physics, pages 52-53)</h2><p><img src="/Y6%20English%20Science%20Review%20086c6356bef54b77a01ba47e0467b5fd/Untitled%2024.png" alt="Human ear label diagram"></p><h3 id="Outer-Ear"><a href="#Outer-Ear" class="headerlink" title="Outer Ear"></a>Outer Ear</h3><ul><li><strong>Pinna</strong>: The visible part of the ear that protrudes from the head. It collects sound waves and directs them into the ear canal.</li><li><strong>Auditory Canal</strong>: A tube that carries sound waves from the pinna to the eardrum.</li></ul><h3 id="Middle-Ear"><a href="#Middle-Ear" class="headerlink" title="Middle Ear"></a>Middle Ear</h3><ul><li><strong>Eardrum (Membrane)</strong>: A thin membrane that vibrates in response to sound waves, transmitting these vibrations to the ossicles.</li><li><strong>Ossicles</strong>: Three tiny bones (malleus, incus, and stapes) that amplify and transmit vibrations from the eardrum to the inner ear.<ul><li><strong>Malleus (Hammer)</strong></li><li><strong>Incus (Anvil)</strong></li><li><strong>Stapes (Stirrup)</strong></li></ul></li><li><strong>Eustachian Tube</strong>: A tube that connects the middle ear to the back of the nose and throat, helping to equalize pressure on both sides of the eardrum.</li></ul><h3 id="Inner-Ear"><a href="#Inner-Ear" class="headerlink" title="Inner Ear"></a>Inner Ear</h3><ul><li><strong>Cochlea</strong>: A spiral-shaped organ that converts sound vibrations into electrical signals. These signals are sent to the brain via the auditory nerve.</li><li><strong>Semicircular Canals</strong>: Three looped tubes filled with fluid that help maintain balance by detecting head movements.</li><li><strong>Vestibule</strong>: The central part of the inner ear that contains the saccule and utricle, which are responsible for detecting linear movements and head position.</li><li><strong>Auditory Nerve</strong>: A nerve that carries electrical signals from the cochlea to the brain for interpretation.</li></ul><h3 id="Functions-of-the-Components-of-the-Human-Ear"><a href="#Functions-of-the-Components-of-the-Human-Ear" class="headerlink" title="Functions of the Components of the Human Ear"></a>Functions of the Components of the Human Ear</h3><ul><li><strong>Pinna</strong>: Collects and funnels sound waves into the ear canal.</li><li><strong>Auditory Canal</strong>: Directs sound waves to the eardrum and protects the middle and inner ear.</li><li><strong>Eardrum</strong>: Vibrates in response to sound waves, initiating the process of sound transmission.</li><li><strong>Ossicles</strong>: Amplify and transfer vibrations from the eardrum to the inner ear.</li><li><strong>Eustachian Tube</strong>: Balances air pressure in the middle ear with the external environment, allowing the eardrum to vibrate properly.</li><li><strong>Cochlea</strong>: Converts mechanical sound vibrations into electrical signals that can be processed by the brain.</li><li><strong>Semicircular Canals</strong>: Detect rotational movements of the head, helping to maintain balance.</li><li><strong>Vestibule</strong>: Detects linear movements and head position, contributing to balance.</li><li><strong>Auditory Nerve</strong>: Transmits auditory information from the cochlea to the brain for hearing perception.</li></ul><h3 id="Common-Ear-Problems-Causes-and-Effects"><a href="#Common-Ear-Problems-Causes-and-Effects" class="headerlink" title="Common Ear Problems: Causes and Effects"></a>Common Ear Problems: Causes and Effects</h3><h3 id="1-Otitis-Media-Middle-Ear-Infection"><a href="#1-Otitis-Media-Middle-Ear-Infection" class="headerlink" title="1. Otitis Media (Middle Ear Infection)"></a>1. <strong>Otitis Media (Middle Ear Infection)</strong></h3><ul><li><strong>Cause</strong>: Bacterial or viral infections, often following a cold or respiratory infection.</li><li><strong>Effects</strong>: Ear pain, fluid buildup, hearing loss, fever, and in severe cases, eardrum perforation.</li></ul><h3 id="2-Otitis-Externa-Swimmer’s-Ear"><a href="#2-Otitis-Externa-Swimmer’s-Ear" class="headerlink" title="2. Otitis Externa (Swimmer’s Ear)"></a>2. <strong>Otitis Externa (Swimmer’s Ear)</strong></h3><ul><li><strong>Cause</strong>: Bacterial infection of the outer ear canal, often due to water exposure.</li><li><strong>Effects</strong>: Ear pain, itching, redness, swelling, and discharge.</li></ul><h3 id="3-Tinnitus"><a href="#3-Tinnitus" class="headerlink" title="3. Tinnitus"></a>3. <strong>Tinnitus</strong></h3><ul><li><strong>Cause</strong>: Exposure to loud noise, ear infections, earwax buildup, age-related hearing loss, and certain medications.</li><li><strong>Effects</strong>: Ringing, buzzing, or roaring sounds in the ear that can be continuous or intermittent.</li></ul><h3 id="4-Hearing-Loss"><a href="#4-Hearing-Loss" class="headerlink" title="4. Hearing Loss"></a>4. <strong>Hearing Loss</strong></h3><ul><li><strong>Cause</strong>: Aging (presbycusis), noise exposure, infections, genetics, and ototoxic medications.</li><li><strong>Effects</strong>: Difficulty hearing, need for increased volume on devices, social withdrawal, and communication challenges.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Cells&quot;&gt;&lt;a href=&quot;#Cells&quot; class=&quot;headerlink&quot; title=&quot;Cells&quot;&gt;&lt;/a&gt;Cells&lt;/h1&gt;&lt;h2 id=&quot;Microscopes-Biology-pages-48-49&quot;&gt;&lt;a href=&quot;#Microscope</summary>
      
    
    
    
    <category term="Review Document" scheme="https://zigao.cc/categories/Review-Document/"/>
    
    
    <category term="Science" scheme="https://zigao.cc/tags/Science/"/>
    
    <category term="Biology" scheme="https://zigao.cc/tags/Biology/"/>
    
    <category term="Physics" scheme="https://zigao.cc/tags/Physics/"/>
    
    <category term="Chemistry" scheme="https://zigao.cc/tags/Chemistry/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://zigao.cc/2024/hello-world/"/>
    <id>https://zigao.cc/2024/hello-world/</id>
    <published>2024-06-16T04:06:17.100Z</published>
    <updated>2024-06-18T23:01:17.037Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="Hardware &amp; Reviews" scheme="https://zigao.cc/categories/Hardware-Reviews/"/>
    
    <category term="Tech Insights" scheme="https://zigao.cc/categories/Hardware-Reviews/Tech-Insights/"/>
    
    <category term="Software &amp; Development" scheme="https://zigao.cc/categories/Hardware-Reviews/Tech-Insights/Software-Development/"/>
    
    <category term="AI &amp; Machine Learning" scheme="https://zigao.cc/categories/Hardware-Reviews/Tech-Insights/Software-Development/AI-Machine-Learning/"/>
    
    <category term="Cybersecurity" scheme="https://zigao.cc/categories/Hardware-Reviews/Tech-Insights/Software-Development/AI-Machine-Learning/Cybersecurity/"/>
    
    <category term="Review Document" scheme="https://zigao.cc/categories/Hardware-Reviews/Tech-Insights/Software-Development/AI-Machine-Learning/Cybersecurity/Review-Document/"/>
    
    
  </entry>
  
  <entry>
    <title>使用GitHub自建视频床</title>
    <link href="https://zigao.cc/2023/github-video/"/>
    <id>https://zigao.cc/2023/github-video/</id>
    <published>2023-07-11T01:32:29.000Z</published>
    <updated>2024-06-18T23:28:46.227Z</updated>
    
    <content type="html"><![CDATA[<p>很多人想要把自己做的视频放到网上，但是发现各种云服务器或流量的价格太贵了。这时候，就可以用免费、可靠的GitHub来自建视频床。这是一种将视频文件存储在GitHub仓库中，并通过链接在博客或网站中嵌入视频的方法。以下是详细的操作步骤：</p><h3 id="步骤-1-创建GitHub仓库"><a href="#步骤-1-创建GitHub仓库" class="headerlink" title="步骤 1: 创建GitHub仓库"></a>步骤 1: 创建GitHub仓库</h3><ol><li>登录GitHub并点击右上角的加号按钮，选择”New repository”创建一个新的仓库。</li><li>给仓库起一个名称，设置为公开（Public）并选择其他适当的选项。</li><li>点击”Create repository”创建仓库。</li></ol><h3 id="步骤-2-安装ffmpeg"><a href="#步骤-2-安装ffmpeg" class="headerlink" title="步骤 2: 安装ffmpeg"></a>步骤 2: 安装ffmpeg</h3><p>由于GitHub单个文件的上传限制是25MB，所以我们需要把视频切片成多个文件来上传。这个时候，我们需要安装使用ffmpeg。</p><p>如果你使用的是macOS，在终端中运行以下命令来安装ffmpeg：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install ffmpeg</span><br></pre></td></tr></table></figure><p>如果你使用的是其他操作系统，请自行查找并安装ffmpeg工具。</p><h3 id="步骤-3-视频文件切片"><a href="#步骤-3-视频文件切片" class="headerlink" title="步骤 3: 视频文件切片"></a>步骤 3: 视频文件切片</h3><p>在终端中，使用以下命令将视频文件切片成HLS格式（.m3u8和.ts文件）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i <span class="string">&#x27;视频文件名称&#x27;</span> -c:v h264 -flags +cgop -g 30 -hls_time 5 -hls_list_size 0 -hls_segment_filename index%3d.ts <span class="string">&#x27;index.m3u8&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><code>-c:v h264</code>: 使用H.264视频编码。</li><li><code>-hls_time 5</code>: 设置每个切片的时长为5秒，你可以根据需要进行调整。</li><li><code>-hls_list_size 0</code>: 设置.m3u8播放列表的大小，0表示不限制大小。</li><li><code>-hls_segment_filename index%3d.ts</code>: 设置.ts切片文件的命名规则。</li></ul><p>切片完成后，将生成的.m3u8和.ts文件保存到一个文件夹中，以便后续管理。</p><h3 id="步骤-4-将切片上传到GitHub仓库"><a href="#步骤-4-将切片上传到GitHub仓库" class="headerlink" title="步骤 4: 将切片上传到GitHub仓库"></a>步骤 4: 将切片上传到GitHub仓库</h3><ol><li>将切片文件夹中的所有文件添加到你的GitHub仓库中。</li><li>提交更改并将切片文件推送到GitHub仓库。</li></ol><h3 id="步骤-5-获取视频链接"><a href="#步骤-5-获取视频链接" class="headerlink" title="步骤 5: 获取视频链接"></a>步骤 5: 获取视频链接</h3><p>你的.m3u8使用jsd加速的链接格式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/用户名/仓库名/文件夹名/index.m3u8</span><br></pre></td></tr></table></figure><h3 id="步骤-6-插入视频到博客中"><a href="#步骤-6-插入视频到博客中" class="headerlink" title="步骤 6: 插入视频到博客中"></a>步骤 6: 插入视频到博客中</h3><p>在你的博客文章中，使用以下代码来嵌入视频：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/hls.js@latest&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">&quot;video&quot;</span> <span class="attr">controls</span> <span class="attr">loop</span>=<span class="string">&quot;false&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> video = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;video&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span> (<span class="title class_">Hls</span>.<span class="title function_">isSupported</span>()) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> hls = <span class="keyword">new</span> <span class="title class_">Hls</span>();</span></span><br><span class="line"><span class="language-javascript">    hls.<span class="title function_">loadSource</span>(<span class="string">&#x27;m3u8视频地址&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    hls.<span class="title function_">attachMedia</span>(video);</span></span><br><span class="line"><span class="language-javascript">    hls.<span class="title function_">on</span>(<span class="title class_">Hls</span>.<span class="property">Events</span>.<span class="property">MANIFEST_PARSED</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      video.<span class="title function_">play</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (video.<span class="title function_">canPlayType</span>(<span class="string">&#x27;application/vnd.apple.mpegurl&#x27;</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript">    video.<span class="property">src</span> = <span class="string">&#x27;m3u8视频地址&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    video.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadedmetadata&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      video.<span class="title function_">play</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将上述代码中的<code>m3u8视频地址</code>替换为你在步骤5中获取的.m3u8链接。</p><p>通过以上步骤，你可以将视频文件存储在GitHub仓库中，并在博客中嵌入使用HLS.js进行播放的视频。确保仓库和视频文件是公开可访问的，以便他人能够观看你的视频。</p><p>希望这篇文章对你有帮助，如果遇到任何问题，请随时联系我，谢谢！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;很多人想要把自己做的视频放到网上，但是发现各种云服务器或流量的价格太贵了。这时候，就可以用免费、可靠的GitHub来自建视频床。这是一种将视频文件存储在GitHub仓库中，并通过链接在博客或网站中嵌入视频的方法。以下是详细的操作步骤：&lt;/p&gt;
&lt;h3 id=&quot;步骤-1-创建</summary>
      
    
    
    
    <category term="Software &amp; Development" scheme="https://zigao.cc/categories/Software-Development/"/>
    
    
    <category term="GitHub" scheme="https://zigao.cc/tags/GitHub/"/>
    
  </entry>
  
</feed>
